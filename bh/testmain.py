# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Design.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import sys
from PyQt5.QtWidgets import QApplication, QLabel
from PyQt5 import QtWidgets, QtCore, QtGui
from PyQt5.QtWidgets import *
from PyQt5.QtGui import *
from PyQt5.QtCore import *

class ExampleWindow(QMainWindow):
    def __init__(self, windowsize):
        super().__init__()
        self.windowsize = windowsize
        self.setupUi()
        
    def setupUi(self):
        self.widget = QWidget()
        self.setCentralWidget(self.widget)
        
        self.gridLayout_2 = QtWidgets.QGridLayout(self.widget)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.gridLayout.setObjectName("gridLayout")
        self.Left = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Left.sizePolicy().hasHeightForWidth())
        self.Left.setSizePolicy(sizePolicy)
        self.Left.setObjectName("Left")
        self.gridLayout.addWidget(self.Left, 3, 0, 1, 1)
        self.Crop = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Crop.sizePolicy().hasHeightForWidth())
        self.Crop.setSizePolicy(sizePolicy)
        self.Crop.setObjectName("Crop")
        self.gridLayout.addWidget(self.Crop, 3, 1, 1, 1)

        self.label = QtWidgets.QLabel(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setScaledContents(True)
        self.label.setObjectName("label")

        
        self.layout_box = QHBoxLayout()
        self.layout_box.setContentsMargins(0, 0, 0, 0)
        self.layout_box.addWidget(self.label)

        self.gridLayout.addLayout(self.layout_box, 2, 0, 1, 3)
        
        self.lineEdit = QtWidgets.QLineEdit(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit.sizePolicy().hasHeightForWidth())
        self.lineEdit.setSizePolicy(sizePolicy)
        self.lineEdit.setObjectName("lineEdit")
        self.gridLayout.addWidget(self.lineEdit, 1, 0, 1, 2)
        self.Import = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Import.sizePolicy().hasHeightForWidth())
        self.Import.setSizePolicy(sizePolicy)
        self.Import.setMinimumSize(QtCore.QSize(100, 40))
        self.Import.setMaximumSize(QtCore.QSize(16777215, 40))
        self.Import.setObjectName("Import")
        self.gridLayout.addWidget(self.Import, 1, 2, 1, 1)
        self.Right = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Right.sizePolicy().hasHeightForWidth())
        self.Right.setSizePolicy(sizePolicy)
        self.Right.setObjectName("Right")
        self.gridLayout.addWidget(self.Right, 3, 2, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout, 0, 0, 1, 1)

        self.retranslateUi()
        self.Import.clicked.connect(self.import_clicked)
        self.label.mousePressEvent = self.getPos

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate

        self.Left.setText(_translate("MainWindow", "<"))
        self.Crop.setText(_translate("MainWindow", "Crop"))
        self.label.setText(_translate("MainWindow", "TextLabel"))
        self.Import.setText(_translate("MainWindow", "Import"))
        self.Right.setText(_translate("MainWindow", ">"))

    def getPos(self , event):
        x = event.pos().x()
        y = event.pos().y()
        print(x/self.label.width())
        print(y/self.label.height())
        
        pixmap2 = QPixmap('blackline.png')
        self.image2 = QLabel(self.widget)
        self.image2.setPixmap(pixmap2)
        self.image2.setFixedSize(pixmap2.size())
        p = self.geometry().bottomRight() - self.image2.geometry().bottomRight() - QPoint(100, 100)
        self.image2.move(p)
        
    def import_clicked(self):
        self.label.clear()
        pdfName = self.lineEdit.text()
        import glob, sys, fitz

        # To get better resolution
        zoom_x = 2.0  # horizontal zoom
        zoom_y = 2.0  # vertical zoom
        mat = fitz.Matrix(zoom_x, zoom_y)  # zoom factor 2 in each dimension

        try:
            doc = fitz.open(pdfName + ".pdf")  # open document
            for page in doc:  # iterate through the pages
                pix = page.get_pixmap(matrix=mat)  # render page to an image
                pix.save("data/%i.png" % page.number)  # store image as a PNG
        except:
            self.label.setText("File not found!")
            self.label.adjustSize()
            return
            
        
        try:
            self.label.setPixmap(QtGui.QPixmap("data/0.png"))
            self.label.adjustSize()
        except:
            self.label.setText("PDF not converted to image or converting error.")
            self.label.adjustSize()
            return
if __name__ == '__main__':
    app = QApplication(sys.argv)
    screensize = app.desktop().availableGeometry().size()

    ex = ExampleWindow(screensize)
    ex.show()

sys.exit(app.exec_())
